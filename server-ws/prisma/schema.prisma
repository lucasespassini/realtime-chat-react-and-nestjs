generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model conversation_participants {
  cvp_id         Int           @id @default(autoincrement())
  cvp_cvt_id     Int
  cvp_usr_id     Int
  cvp_entry_date DateTime?     @default(now()) @db.Timestamp(0)
  conversations  conversations @relation(fields: [cvp_cvt_id], references: [cvt_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_conversation_participants_conversations")
  users          users         @relation(fields: [cvp_usr_id], references: [usr_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_conversation_participants_users")

  @@index([cvp_cvt_id], map: "FK_conversation_participants_conversations")
  @@index([cvp_usr_id], map: "FK_conversation_participants_users")
}

model conversations {
  cvt_id                    Int                         @id @default(autoincrement())
  cvt_ulid                  String                      @unique(map: "UK_conversations_ulid") @db.VarChar(26)
  cvt_name                  String?                     @db.VarChar(100)
  conversation_participants conversation_participants[]
  messages                  messages[]
}

model messages {
  msg_id        Int           @id @default(autoincrement())
  msg_usr_id    Int
  msg_cvt_id    Int
  msg_content   String        @db.VarChar(255)
  msg_read      Boolean?      @default(false)
  msg_date_send DateTime?     @default(now()) @db.Timestamp(0)
  conversations conversations @relation(fields: [msg_cvt_id], references: [cvt_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_messages_conversations")
  users         users         @relation(fields: [msg_usr_id], references: [usr_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_messages_users")

  @@index([msg_cvt_id], map: "FK_messages_conversations")
  @@index([msg_usr_id], map: "FK_messages_users")
}

model users {
  usr_id                    Int                         @id @default(autoincrement())
  usr_ulid                  String                      @unique(map: "UK_users_ulid") @db.VarChar(26)
  usr_socket_id             String?                     @db.VarChar(20)
  usr_icon                  String?                     @db.VarChar(255)
  usr_username              String                      @unique(map: "UK_users_username") @db.VarChar(100)
  usr_password              String                      @db.VarChar(100)
  conversation_participants conversation_participants[]
  messages                  messages[]
}
